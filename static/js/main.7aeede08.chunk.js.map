{"version":3,"sources":["App.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameId","shortid","generate","numberId","handleChange","ev","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form__title","htmlFor","type","form__input","id","onChange","pattern","title","placeholder","required","form__button","Component","ContactList","contacts","onDeleteContact","ContactList__container","map","ContactList__item","ContactList__text","ContactList__button","onClick","Filter","Filter__text","Filter__input","App","filter","addContact","contact","completed","find","toLowerCase","alert","changeFilter","visibleContacts","includes","deleteContact","contactId","prevState","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","container","container__title","Contacts__title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aeede08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2s0L8\",\"container__title\":\"App_container__title__3GHKk\",\"Contacts__title\":\"App_Contacts__title__3yPET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter__text\":\"Filter_Filter__text__3VZ_O\",\"Filter__input\":\"Filter_Filter__input__1Br9e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__title\":\"ContactForm_form__title__1sqMP\",\"form__input\":\"ContactForm_form__input__2gaju\",\"form__button\":\"ContactForm_form__button__20AJY\"};","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport shortid from 'shortid';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    nameId = shortid.generate();\r\n    numberId = shortid.generate();\r\n\r\n    handleChange = ev => {\r\n        // console.log(ev.currentTarget);\r\n        // console.log(ev.currentTarget.name);\r\n        // console.log(ev.currentTarget.value);\r\n        const { name, value } = ev.currentTarget;\r\n        this.setState({\r\n        [name]: value,\r\n        });\r\n    }\r\n\r\n    handleSubmit = ev => {\r\n        ev.preventDefault();\r\n\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label\r\n                    className={s.form__title}\r\n                    htmlFor={this.nameId}\r\n                >\r\n                    Name\r\n                </label>\r\n                    <input\r\n                    type=\"text\"\r\n                    className={s.form__input}\r\n                    name=\"name\"\r\n                    id={this.nameId}\r\n                    value={name}\r\n                    onChange={this.handleChange}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    placeholder=\"Enter name\"\r\n                    required\r\n                    />\r\n                \r\n                <label\r\n                    className={s.form__title}\r\n                    htmlFor={this.numberId}\r\n                >\r\n                    Number\r\n                </label>\r\n                    <input\r\n                    type=\"tel\"\r\n                    className={s.form__input}\r\n                    name=\"number\"\r\n                    id={this.numberId}\r\n                    value={number}\r\n                    onChange={this.handleChange}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    placeholder=\"Enter phone number\"\r\n                    required\r\n                    />\r\n                \r\n                <button\r\n                    className={s.form__button}\r\n                    type=\"submit\"\r\n                >\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n    return (\r\n        <ul className={s.ContactList__container}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <li\r\n                    className={s.ContactList__item}\r\n                    key={id}>\r\n                    <p className={s.ContactList__text}>{name}: {number}</p>\r\n                    <button\r\n                        className={s.ContactList__button}\r\n                        onClick={() => onDeleteContact(id)}>\r\n                        X\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({value, onChange}) => (\r\n    <label className={s.Filter__text}>\r\n        Find contacts by name\r\n        <input\r\n            type=\"text\"\r\n            className={s.Filter__input}\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n    </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport contacts from './contacts.json';\nimport s from './App.module.css';\nimport shortid from 'shortid';\n\n\nclass App extends Component {\n  state = {\n    contacts: contacts,\n    filter: '',\n  }\n\n  componentDidMount() {\n    console.log('App componentDidMount');\n\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    // console.log(parsedContacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n    // console.log(prevState);\n    // console.log(this.state);\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n      completed: false,\n    };\n\n    if (\n      this.state.contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  }\n\n  changeFilter = (ev) => {\n    this.setState({ filter: ev.currentTarget.value });\n  }\n\n  visibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n\n  render() {\n    return (\n      <div className={s.container}>\n        <h1 className={s.container__title}>Phonebook</h1>\n        \n        <ContactForm onSubmit={this.addContact} />\n\n        <div>\n          <h2 className={s.Contacts__title}>Contacts</h2>\n          <Filter\n            value={this.state.filter}\n            onChange={this.changeFilter}\n          />\n          <ContactList\n            contacts={this.visibleContacts()}\n            onDeleteContact={this.deleteContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList__container\":\"ContactList_ContactList__container__3HOf1\",\"ContactList__item\":\"ContactList_ContactList__item__17yoY\",\"ContactList__text\":\"ContactList_ContactList__text__2V90D\",\"ContactList__button\":\"ContactList_ContactList__button__3kyBk\"};"],"sourceRoot":""}